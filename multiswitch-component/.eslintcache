[{"D:\\multiswitch-component\\src\\index.js":"1","D:\\multiswitch-component\\src\\App.js":"2","D:\\multiswitch-component\\src\\reportWebVitals.js":"3","D:\\multiswitch-component\\src\\Multiswitch.js":"4","D:\\multiswitch-component\\src\\MultiSwitch.js":"5","D:\\multiswitch-component\\src\\ProductComponent.js":"6"},{"size":548,"mtime":1611463551933,"results":"7","hashOfConfig":"8"},{"size":831,"mtime":1612524478134,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":554,"mtime":1611415281017,"results":"11","hashOfConfig":"8"},{"size":5152,"mtime":1612840337189,"results":"12","hashOfConfig":"8"},{"size":4788,"mtime":1612809092304,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"14eo97w",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"D:\\multiswitch-component\\src\\index.js",[],["30","31"],"D:\\multiswitch-component\\src\\App.js",["32","33"],"import './App.css';\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MultiSwitch from'./MultiSwitch';\nimport ProductComponent from \"./ProductComponent\";\n\n\nimport { Button } from 'reactstrap';\n\nclass App extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            value_key: \"\",\n            fieldVal: \"\"\n\n        }\n    }\n    parentFunction=(data_from_child)=>{\n        this.setState({value_key:data_from_child});\n    }\n\n    onUpdate = (val) => {\n        this.setState({\n            fieldVal: val\n        })\n    };\n    render(){\n        return(      <div className=\"multiswitch\">\n                <MultiSwitch />\n\n\n            </div>\n        )\n    }\n}\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n\n\n\nexport default App;\n","D:\\multiswitch-component\\src\\reportWebVitals.js",[],"D:\\multiswitch-component\\src\\Multiswitch.js",[],"D:\\multiswitch-component\\src\\MultiSwitch.js",["34","35","36","37","38","39"],"import React from \"react\";\r\nimport { button } from \"reactstrap\";\r\nimport ProductComponent from \"./ProductComponent\";\r\nimport Products from \"./data/products.json\";\r\n\r\nclass MultiSwitch extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const people = [];\r\n\r\n        this.state = {\r\n            simCount: \"2\",\r\n            product: Products,\r\n            dataSelected: \"1GB\",\r\n            showPriceCard: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            showPriceCard: true\r\n        })\r\n        this.updateProductJson(this.state.simCount,this.state.dataSelected);\r\n\r\n    }\r\n\r\n    updateProductJson = (simCount,dataValue) => {\r\n\r\n        let productsDataSelected = this.state.product[\"MOB-\"+dataValue],\r\n\r\n            productSimSelected = productsDataSelected.filter(sim => sim.sim_count == simCount),\r\n        simSelectedOne = productsDataSelected.filter(sim => sim.sim_count == 1);\r\n\r\n\r\n        this.setState({\r\n            productSelected:  productSimSelected[0],\r\n            simSelectedOne: simSelectedOne[0]\r\n        })\r\nï»¿\r\n    };\r\n\r\n    handleClickSim = (e) => {\r\n        this.setState({\r\n            simCount: e.target.value,\r\n        });\r\n       this.updateProductJson(e.target.value,this.state.dataSelected);\r\n\r\n        console.log(e.target.value);\r\n        e.target.parentElement\r\n            .querySelectorAll(\".button-selected-active\")\r\n            .forEach((e) => e.classList.remove(\"button-selected-active\"));\r\n\r\n        e.target.classList.add(\"button-selected-active\");\r\n    };\r\n\r\n    handleClickSimData = (e) => {\r\n        this.setState({\r\n            dataSelected: e.target.value,\r\n            jsondata :'data'\r\n        });\r\n        this.updateProductJson(this.state.simCount,e.target.value);\r\n            console.log(e.target.value);\r\n\r\n\r\n            e.target.parentElement\r\n            .querySelectorAll(\".button-selected-active\")\r\n            .forEach((e) => e.classList.remove(\"button-selected-active\"));\r\n\r\n        e.target.classList.add(\"button-selected-active\");\r\n       /* e.target.parentElement.nextElementSibling.children[0].classList.add(\"hide\");\r\n        e.target.parentElement.nextElementSibling.children[3].children[12].classList.add(\"hide\")*/\r\n\r\n        if (e.target.value === \"40GB\") {\r\n            e.target.parentElement.nextElementSibling.classList.add(\"change-border\");\r\n\r\n        }\r\n        e.target.parentElement.nextElementSibling.classList.remove(\"change-border\");\r\n\r\n        /*if (e.target.value === \"6GB\") {\r\n            e.target.parentElement.nextElementSibling.children[3].children[12].classList.remove(\"hide\");\r\n                var productArr = Object.keys(Products);\r\n\r\n                    console.log(productArr.indexOf(e.target.value));\r\n\r\n        }*/\r\n    };\r\n\r\n    render() {\r\n        const buttonListElements = [],\r\n            n = 5,\r\n            dataCount = [],\r\n            productArr = Object.keys(Products),\r\n            productVal = Object.values(Products),\r\n            productEntries = Object.entries(Products),\r\n            jsonVal = [];\r\n\r\n        let jsonData = productVal.map((item,index) =>\r\n            item.map((val,index) => <p> {val.monthly_cost} </p>)\r\n        );\r\n        /*var value= jsonData[productArr.indexOf(\"MOB-\"+this.state.dataSelected)][this.state.simCount-1];\r\n        var v =  value.props.children[1]*0.01;*/\r\n        for (let i = 2; i <= n; i++) {\r\n            buttonListElements.push(\r\n                <button\r\n                    className=\"btn btn-outline btn-lg\"\r\n                    value={i}\r\n                    onClick={this.handleClickSim}>\r\n                    {i}\r\n                </button>\r\n            );\r\n        }\r\n\r\n        for (let i = 0; i < productArr.length; i++) {\r\n            let datasimVal = productArr[i].replace(\"MOB-\", \"\");\r\n            dataCount.push(\r\n                <button\r\n                    className=\"btn btn-outline btn-lg\"\r\n                    value={datasimVal}\r\n                    onClick={this.handleClickSimData}>\r\n                    {datasimVal}</button>\r\n\r\n            );\r\n\r\n\r\n        }\r\n\r\n        /*for (let i = 0 ;i < productVal.length;i++){\r\n                let jsonval = productVal[i].was_data_allowance;\r\n\r\n                jsonData.push(\r\n                    <p>{jsonval}</p>\r\n                );\r\n            }*/\r\n\r\n        return (\r\n            <div className=\"multi-switch-Component\">\r\n                <div class=\"multiswitch-border\">\r\n                    <h3> How many SIMs do you need ? </h3>\r\n                    <p> Each extra SIM has a 20 % discount </p>\r\n                    <ul> {buttonListElements} </ul>\r\n                </div>{\" \"}\r\n                <div className=\"multiswitch\">\r\n                    <h3> How much data would you like per SIM ? </h3> {dataCount}\r\n                </div>\r\n                {this.state.showPriceCard ?   <ProductComponent\r\n                    simCount={this.state.simCount}\r\n                    simData={this.state.dataSelected} productPrice={this.state.productSelected} simSelected={this.state.simSelectedOne}/> : null}\r\n                    </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default MultiSwitch;\r\n","D:\\multiswitch-component\\src\\ProductComponent.js",["40"],"\r\nimport React from 'react'\r\nimport sim from './icon-sim-purple.svg';\r\nimport tickmark from './icon-tick-green.png';\r\nimport Countdown from 'react-countdown';\r\n\r\n\r\n\r\n\r\n class ProductComponent extends React.Component {\r\n     constructor(props) {\r\n         super(props);\r\n\r\n     }\r\n     handleClick = () => {\r\n         this.props.onHeaderClick(this.props.value);\r\n     }\r\n\r\n    state = {\r\n        days: 3,\r\n        hours: 11,\r\n        minutes: 14,\r\n        seconds: 35\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.myInterval = setInterval(() => {\r\n            const { seconds, minutes } = this.state\r\n\r\n            if (seconds > 0) {\r\n                this.setState(({ seconds }) => ({\r\n                    seconds: seconds - 1\r\n                }))\r\n            }\r\n            if (seconds === 0) {\r\n                if (minutes === 0) {\r\n                    clearInterval(this.myInterval)\r\n                } else {\r\n                    this.setState(({ minutes }) => ({\r\n                        minutes: minutes - 1,\r\n                        seconds: 59\r\n                    }))\r\n                }\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n\r\n       GetPriceInEuro = (cost) => {\r\n\r\n         return (\r\n             Math.round(cost * 0.010)\r\n         )\r\n     }\r\n\r\n\r\n     comparePrice = (previous,current) => {\r\nlet wasPrice = \"\";\r\n         if(current<previous){\r\n             wasPrice= <div className=\"saved-price\"><span>Was </span><span class=\"was-price\">&#163;{this.GetPriceInEuro(previous)}</span></div>\r\n         }\r\n         return wasPrice;\r\n     }\r\n\r\n     savingPrice = (selectedsimcountPrice,simCountONePrice) => {\r\n         let savedPrice = (simCountONePrice*this.props.simCount) -selectedsimcountPrice;\r\n         if(savedPrice){\r\n             return <div className=\"saving-text\">&#163;{this.GetPriceInEuro(savedPrice)} a month Family SIM saving</div>\r\n         }\r\n         return \"\";\r\n\r\n\r\n     }\r\n\r\n     render() {\r\n\r\n         const monthlyCost = this.props.productPrice.monthly_cost,\r\n                     renderer = ({ days, hours, minutes, seconds }) => {\r\n                     // Render a countdown\r\n                     return <span className='countdown-timer' >{days}d {hours}h {minutes}m {seconds}s</span>;\r\n                 };\r\n\r\n\r\n             return (\r\n                 <div className=\"container-class\">\r\n                         {this.props.productPrice.countdown_end_time ? <div class=\"count-down\"><span>Pricehas never been lower</span> <Countdown date={this.props.productPrice.countdown_end_time} renderer={renderer} /></div> :null}\r\n                     <div className=\"container\">\r\n                         <img src={sim} className=\"App-logo\" alt=\"logo\"/>\r\n                         <div className=\"centered\">\r\n                             <h4> {this.props.simCount}</h4>\r\n                             SIMs\r\n                         </div>\r\n\r\n                     </div>\r\n\r\n                         <div className=\"data-section\">\r\n                             <h3>{this.props.simData}</h3>\r\n                               <span>data allowance each</span>\r\n\r\n                         </div>\r\n                     <div class=\"plan-features\">\r\n                         <div className=\"plan-text\">\r\n                         <img src={tickmark} className=\"tick-mark\" alt=\"logo\"/>\r\n                         <span>4G and 5G enabled</span><br/>\r\n                         <img src={tickmark} className=\"tick-mark\" alt=\"logo\"/>\r\n                         <span>Unlimited minutes and texts</span><br/>\r\n                         <img src={tickmark} className=\"tick-mark\" alt=\"logo\"/>\r\n                         <span>Access to 5 million BT Wi-fi hotspots</span><br/>\r\n                         <img src={tickmark} className=\"tick-mark\" alt=\"logo\"/>\r\n                         <span>30-day money-back guarantee</span><br/>\r\n                         </div>\r\n                         {this.props.productPrice.merch_strip_text ?\r\n                             <p className=\"merch-sixGB\">Price has never been lower</p>\r\n                         : null}\r\n                         <div className=\"price-card\">\r\n\r\n                             {this.comparePrice(this.props.productPrice.was_monthly_cost,this.props.productPrice.monthly_cost)}  <h2 class=\"price\">&#163;{this.GetPriceInEuro(monthlyCost)}</h2> <sup className=\"caret\">&Delta;</sup>  a month\r\n                             {this.savingPrice(monthlyCost,this.props.simSelected.monthly_cost)}\r\n                             <p>12-month contract</p>\r\n                             <button className=\"choose-plan-cta\">Choose plan\r\n                             </button>\r\n                         </div>\r\n\r\n                     </div>\r\n                     </div>\r\n\r\n             )\r\n         }\r\n\r\n\r\n}\r\n\r\n\r\nexport default ProductComponent;",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":5,"column":8,"nodeType":"47","messageId":"48","endLine":5,"endColumn":24},{"ruleId":"45","severity":1,"message":"49","line":8,"column":10,"nodeType":"47","messageId":"48","endLine":8,"endColumn":16},{"ruleId":"45","severity":1,"message":"50","line":9,"column":15,"nodeType":"47","messageId":"48","endLine":9,"endColumn":21},{"ruleId":"51","severity":1,"message":"52","line":30,"column":83,"nodeType":"53","messageId":"54","endLine":30,"endColumn":85},{"ruleId":"51","severity":1,"message":"52","line":31,"column":75,"nodeType":"53","messageId":"54","endLine":31,"endColumn":77},{"ruleId":"45","severity":1,"message":"55","line":93,"column":13,"nodeType":"47","messageId":"48","endLine":93,"endColumn":27},{"ruleId":"45","severity":1,"message":"56","line":94,"column":13,"nodeType":"47","messageId":"48","endLine":94,"endColumn":20},{"ruleId":"45","severity":1,"message":"57","line":96,"column":13,"nodeType":"47","messageId":"48","endLine":96,"endColumn":21},{"ruleId":"58","severity":1,"message":"59","line":11,"column":6,"nodeType":"60","messageId":"61","endLine":14,"endColumn":7},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'ProductComponent' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'people' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'productEntries' is assigned a value but never used.","'jsonVal' is assigned a value but never used.","'jsonData' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]